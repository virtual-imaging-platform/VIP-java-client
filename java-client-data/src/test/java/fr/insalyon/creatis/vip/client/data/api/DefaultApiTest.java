/*
 * Data extension of CARMIN
 * Data requests
 *
 * OpenAPI spec version: 0.2.1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package fr.insalyon.creatis.vip.client.data.api;

import fr.insalyon.creatis.vip.client.data.ApiException;
import fr.insalyon.creatis.vip.client.data.model.ErrorCodeAndMessage;
import fr.insalyon.creatis.vip.client.data.model.Path;
import fr.insalyon.creatis.vip.client.data.model.UploadData;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Ignore
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    
    /**
     * 
     *
     * create the specified directory in user space
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createPathTest() throws ApiException {
        String uri = null;
        Path response = api.createPath(uri);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete the specified path
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deletePathTest() throws ApiException {
        String uri = null;
        api.deletePath(uri);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * indicates if the specified path exists or not
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void doesPathExistsTest() throws ApiException {
        String uri = null;
        Boolean response = api.doesPathExists(uri);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * returns the asked file
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void downloadFileTest() throws ApiException {
        String uri = null;
        String response = api.downloadFile(uri);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * get the specified path if it exists
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getPathTest() throws ApiException {
        String uri = null;
        Path response = api.getPath(uri);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * returns all files and directory contained in the specified path
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listDirectoryTest() throws ApiException {
        String uri = null;
        List<Path> response = api.listDirectory(uri);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * returns the uploaded path
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void uploadFileTest() throws ApiException {
        UploadData body = null;
        UploadData response = api.uploadFile(body);

        // TODO: test validations
    }
    
}
